/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swift.upi;


import java.awt.Color;
import java.awt.HeadlessException;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.sql.PreparedStatement;
import javax.swing.ImageIcon;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author J.A.R.V.I.S
 */
public class HomeScreenUI extends javax.swing.JFrame {

    

    /**
     * Creates new form HomeScreenUI
     */
    public HomeScreenUI() {
        initComponents();
        detectNetwork();
       
        txtLimit.setEditable(false);
        txtLimit2.setEditable(false);
        txtUpiPIN.setEnabled(false);
        txtVirtID.setEditable(false);
        changePINBtn.setEnabled(false);
        changeVIdBtn.setEnabled(false);
         
    }

         public void detectNetwork(){
        Thread timer=new Thread(){
            @Override
            public void run(){
                for(;;){
                       Socket socket=new Socket();
                      InetSocketAddress address=new InetSocketAddress("www.db4free.net",80);
                    try{
                      socket.connect(address);
                      x=0;
                    }
                    catch(IOException e)
                {
                   x=1;
                }
                    try{
                        sleep(10);
                    }
                    catch(InterruptedException e)
                {
                    e.printStackTrace();
                }
                }
            }
        };
                timer.start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    String acc=null;
    long ac;
    int pin;
    float rup;
    int x;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TransUI = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtLimit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLimit2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyTab = new javax.swing.JTable();
        gth1Btn = new javax.swing.JButton();
        translimit = new javax.swing.JButton();
        noTransLimit = new javax.swing.JButton();
        ProfileUI = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPname = new javax.swing.JLabel();
        txtPmobile = new javax.swing.JLabel();
        txtPupi = new javax.swing.JLabel();
        virtualIdBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        changePINBtn = new javax.swing.JButton();
        txtVirtID = new javax.swing.JTextField();
        changeVIdBtn = new javax.swing.JButton();
        txtUpiPIN = new javax.swing.JTextField();
        logout2Btn = new javax.swing.JButton();
        gth2Btn = new javax.swing.JButton();
        deleteAccBtn = new javax.swing.JButton();
        BankAccUI = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bankAcc = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        addBank = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        addAccount = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        addMobile = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        addBankAccBtn = new javax.swing.JButton();
        addPIN = new javax.swing.JPasswordField();
        show = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        addRePIN = new javax.swing.JPasswordField();
        check = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        remAcc = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        remPass = new javax.swing.JPasswordField();
        show2 = new javax.swing.JCheckBox();
        remBankAccBtn = new javax.swing.JButton();
        gth3Btn = new javax.swing.JButton();
        RequestUI = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtSend = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtAmt = new javax.swing.JTextField();
        txtRem = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtAcc = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        reqMoneyBtn = new javax.swing.JButton();
        cancelReqBtn = new javax.swing.JButton();
        SendUI = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtRec = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        sdAmt = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        sendAcc = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        payMoneyBtn = new javax.swing.JButton();
        cancelPayBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtUname = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        sendBtn = new javax.swing.JButton();
        requestBtn = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        transBtn = new javax.swing.JButton();
        profileBtn = new javax.swing.JButton();
        bankAccBtn = new javax.swing.JButton();

        TransUI.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        TransUI.setTitle("Transactions - SWIFT UPI");
        TransUI.setIconImage(new ImageIcon(getClass().getResource("UPI_symbol.png")).getImage());
        TransUI.setLocation(new java.awt.Point(0, 0));
        TransUI.setMinimumSize(new java.awt.Dimension(660, 560));
        TransUI.setPreferredSize(new java.awt.Dimension(660, 560));
        TransUI.setResizable(false);
        TransUI.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                TransUIWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(660, 560));
        jPanel1.setPreferredSize(new java.awt.Dimension(660, 560));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Name_Logo.jpg"))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Upi.png"))); // NOI18N

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel3.setText("TRANSACTIONS");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setText("Transaction Limit");

        txtLimit.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtLimit.setToolTipText("Enter transaction amount to be limited");
        txtLimit.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLimitKeyTyped(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setText("No. of transaction limit");

        txtLimit2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtLimit2.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtLimit2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLimit2KeyTyped(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel7.setText("Transaction History");

        historyTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "From", "To", "Account", "Date / Time", "Type", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(historyTab);
        if (historyTab.getColumnModel().getColumnCount() > 0) {
            historyTab.getColumnModel().getColumn(0).setMinWidth(10);
            historyTab.getColumnModel().getColumn(0).setPreferredWidth(10);
            historyTab.getColumnModel().getColumn(3).setMinWidth(82);
            historyTab.getColumnModel().getColumn(3).setPreferredWidth(82);
            historyTab.getColumnModel().getColumn(4).setMinWidth(110);
            historyTab.getColumnModel().getColumn(4).setPreferredWidth(110);
            historyTab.getColumnModel().getColumn(5).setMinWidth(12);
            historyTab.getColumnModel().getColumn(5).setPreferredWidth(12);
            historyTab.getColumnModel().getColumn(6).setMinWidth(36);
            historyTab.getColumnModel().getColumn(6).setPreferredWidth(36);
        }

        gth1Btn.setBackground(new java.awt.Color(72, 133, 237));
        gth1Btn.setForeground(new java.awt.Color(255, 255, 255));
        gth1Btn.setText("GO TO HOME");
        gth1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gth1BtnActionPerformed(evt);
            }
        });

        translimit.setBackground(new java.awt.Color(72, 133, 237));
        translimit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        translimit.setForeground(new java.awt.Color(255, 255, 255));
        translimit.setText("Change");
        translimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                translimitActionPerformed(evt);
            }
        });

        noTransLimit.setBackground(new java.awt.Color(72, 133, 237));
        noTransLimit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        noTransLimit.setForeground(new java.awt.Color(255, 255, 255));
        noTransLimit.setText("Change");
        noTransLimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noTransLimitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(translimit))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLimit2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(noTransLimit))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(gth1Btn)
                .addGap(280, 280, 280))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(translimit))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtLimit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noTransLimit))
                .addGap(43, 43, 43)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(gth1Btn)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout TransUILayout = new javax.swing.GroupLayout(TransUI.getContentPane());
        TransUI.getContentPane().setLayout(TransUILayout);
        TransUILayout.setHorizontalGroup(
            TransUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TransUILayout.setVerticalGroup(
            TransUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TransUI.getAccessibleContext().setAccessibleParent(this);

        ProfileUI.setTitle("Profile - SWIFT UPI");
        ProfileUI.setIconImage(new ImageIcon(getClass().getResource("UPI_symbol.png")).getImage());
        ProfileUI.setMinimumSize(new java.awt.Dimension(568, 728));
        ProfileUI.setPreferredSize(new java.awt.Dimension(568, 728));
        ProfileUI.setResizable(false);
        ProfileUI.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ProfileUIWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(568, 728));
        jPanel2.setPreferredSize(new java.awt.Dimension(568, 728));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Name_Logo.jpg"))); // NOI18N

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Upi.png"))); // NOI18N

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel10.setText("PROFILE");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Acclogobig.png"))); // NOI18N

        txtPname.setBackground(new java.awt.Color(255, 255, 255));
        txtPname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPname.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N

        txtPmobile.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPmobile.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mobile No.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N

        txtPupi.setBackground(new java.awt.Color(255, 255, 255));
        txtPupi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPupi.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "UPI ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N

        virtualIdBtn.setBackground(new java.awt.Color(72, 133, 237));
        virtualIdBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        virtualIdBtn.setForeground(new java.awt.Color(255, 255, 255));
        virtualIdBtn.setText("Create Virtual ID");
        virtualIdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                virtualIdBtnActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Setup", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        changePINBtn.setBackground(new java.awt.Color(72, 133, 237));
        changePINBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        changePINBtn.setForeground(new java.awt.Color(255, 255, 255));
        changePINBtn.setText("Change");
        changePINBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePINBtnActionPerformed(evt);
            }
        });

        txtVirtID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtVirtID.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Virtual ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N
        txtVirtID.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtVirtID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtVirtIDMouseClicked(evt);
            }
        });
        txtVirtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVirtIDKeyTyped(evt);
            }
        });

        changeVIdBtn.setBackground(new java.awt.Color(72, 133, 237));
        changeVIdBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        changeVIdBtn.setForeground(new java.awt.Color(255, 255, 255));
        changeVIdBtn.setText("Change");
        changeVIdBtn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                changeVIdBtnFocusLost(evt);
            }
        });
        changeVIdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeVIdBtnActionPerformed(evt);
            }
        });

        txtUpiPIN.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "UPI PIN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N
        txtUpiPIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUpiPINMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUpiPIN, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(txtVirtID))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(changeVIdBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(changePINBtn))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(changePINBtn)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtUpiPIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtVirtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(changeVIdBtn))))
        );

        logout2Btn.setBackground(new java.awt.Color(72, 133, 237));
        logout2Btn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout2Btn.setForeground(new java.awt.Color(255, 255, 255));
        logout2Btn.setText("Logout");
        logout2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout2BtnActionPerformed(evt);
            }
        });

        gth2Btn.setBackground(new java.awt.Color(72, 133, 237));
        gth2Btn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gth2Btn.setForeground(new java.awt.Color(255, 255, 255));
        gth2Btn.setText("GO TO HOME");
        gth2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gth2BtnActionPerformed(evt);
            }
        });

        deleteAccBtn.setBackground(new java.awt.Color(72, 133, 237));
        deleteAccBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        deleteAccBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteAccBtn.setText("Delete my account");
        deleteAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel8)
                .addGap(6, 6, 6)
                .addComponent(jLabel9))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel10)
                .addGap(317, 317, 317)
                .addComponent(logout2Btn))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jLabel11))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(txtPname, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(txtPmobile, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(txtPupi, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(virtualIdBtn))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(gth2Btn)
                .addGap(64, 64, 64)
                .addComponent(deleteAccBtn))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(logout2Btn))
                .addGap(6, 6, 6)
                .addComponent(jLabel11)
                .addGap(6, 6, 6)
                .addComponent(txtPname, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPmobile, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPupi, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(virtualIdBtn)))
                .addGap(37, 37, 37)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gth2Btn)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(deleteAccBtn))))
        );

        javax.swing.GroupLayout ProfileUILayout = new javax.swing.GroupLayout(ProfileUI.getContentPane());
        ProfileUI.getContentPane().setLayout(ProfileUILayout);
        ProfileUILayout.setHorizontalGroup(
            ProfileUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ProfileUILayout.setVerticalGroup(
            ProfileUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ProfileUI.getAccessibleContext().setAccessibleParent(this);

        BankAccUI.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        BankAccUI.setTitle("Bank Account - SWIFT UPI");
        BankAccUI.setIconImage(new ImageIcon(getClass().getResource("UPI_symbol.png")).getImage());
        BankAccUI.setMinimumSize(new java.awt.Dimension(500, 660));
        BankAccUI.setResizable(false);
        BankAccUI.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                BankAccUIWindowClosing(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setMinimumSize(new java.awt.Dimension(500, 660));
        jPanel5.setPreferredSize(new java.awt.Dimension(500, 660));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Name_Logo.jpg"))); // NOI18N

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Upi.png"))); // NOI18N

        jLabel25.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("BANK ACCOUNTS");

        bankAcc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Bank", "Account No.", "Account Type", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(bankAcc);
        if (bankAcc.getColumnModel().getColumnCount() > 0) {
            bankAcc.getColumnModel().getColumn(0).setMinWidth(20);
            bankAcc.getColumnModel().getColumn(0).setPreferredWidth(20);
            bankAcc.getColumnModel().getColumn(1).setMinWidth(140);
            bankAcc.getColumnModel().getColumn(1).setPreferredWidth(140);
            bankAcc.getColumnModel().getColumn(2).setMinWidth(90);
            bankAcc.getColumnModel().getColumn(2).setPreferredWidth(90);
            bankAcc.getColumnModel().getColumn(3).setMinWidth(50);
            bankAcc.getColumnModel().getColumn(3).setPreferredWidth(50);
            bankAcc.getColumnModel().getColumn(4).setMinWidth(50);
            bankAcc.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Bank Account", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N

        addBank.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addBank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Bank--", "State Bank Of India", "HDFC Bank", "ICICI Bank", "Punjab National Bank", "Axis Bank", "Canara Bank", "Bank of Baroda", "Union Bank", "IDBI Bank", "Bank of India" }));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel26.setText("Select Bank");

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel27.setText("Account No.");

        addAccount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addAccountKeyTyped(evt);
            }
        });

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel28.setText("Mobile");

        addMobile.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addMobileKeyTyped(evt);
            }
        });

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("Set 4-digit UPI PIN");

        addBankAccBtn.setBackground(new java.awt.Color(72, 133, 237));
        addBankAccBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addBankAccBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBankAccBtn.setText("Add Account");
        addBankAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBankAccBtnActionPerformed(evt);
            }
        });

        addPIN.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addPIN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addPINKeyTyped(evt);
            }
        });

        show.setBackground(new java.awt.Color(255, 255, 255));
        show.setText("Show");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Re-type UPI PIN");

        addRePIN.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addRePIN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                addRePINFocusLost(evt);
            }
        });
        addRePIN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addRePINKeyTyped(evt);
            }
        });

        check.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel26))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(addBank, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel27))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(addAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel28))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(addMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel31))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(addPIN, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(show))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel4))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(addRePIN, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(addBankAccBtn))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel26)
                .addGap(6, 6, 6)
                .addComponent(addBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel27)
                .addGap(6, 6, 6)
                .addComponent(addAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addGap(6, 6, 6)
                .addComponent(addMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel31)
                .addGap(6, 6, 6)
                .addComponent(addPIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(show)
                .addGap(2, 2, 2)
                .addComponent(jLabel4)
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addRePIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(addBankAccBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Remove Bank Account", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setText("S. No.");

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jLabel33.setBackground(new java.awt.Color(255, 255, 255));
        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel33.setText("Account No.");

        remAcc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        remAcc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                remAccKeyTyped(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel34.setText("Enter Password");

        remPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        show2.setBackground(new java.awt.Color(255, 255, 255));
        show2.setText("Show");
        show2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show2ActionPerformed(evt);
            }
        });

        remBankAccBtn.setBackground(new java.awt.Color(72, 133, 237));
        remBankAccBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        remBankAccBtn.setForeground(new java.awt.Color(255, 255, 255));
        remBankAccBtn.setText("Remove");
        remBankAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remBankAccBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(show2))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(remBankAccBtn))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel34)))
                        .addGap(0, 52, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remPass, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(remAcc, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel33)
                                    .addComponent(jLabel32))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(show2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(remBankAccBtn)
                .addContainerGap())
        );

        gth3Btn.setBackground(new java.awt.Color(72, 133, 237));
        gth3Btn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gth3Btn.setForeground(new java.awt.Color(255, 255, 255));
        gth3Btn.setText("GO TO HOME");
        gth3Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gth3BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(gth3Btn)
                        .addGap(62, 62, 62))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel25)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(gth3Btn))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout BankAccUILayout = new javax.swing.GroupLayout(BankAccUI.getContentPane());
        BankAccUI.getContentPane().setLayout(BankAccUILayout);
        BankAccUILayout.setHorizontalGroup(
            BankAccUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BankAccUILayout.setVerticalGroup(
            BankAccUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        RequestUI.setTitle("Request Money - SWIFT UPI");
        RequestUI.setBackground(new java.awt.Color(255, 255, 255));
        RequestUI.setIconImage(new ImageIcon(getClass().getResource("UPI_symbol.png")).getImage());
        RequestUI.setMinimumSize(new java.awt.Dimension(400, 540));
        RequestUI.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                RequestUIWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                RequestUIWindowDeactivated(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setMinimumSize(new java.awt.Dimension(400, 540));
        jPanel8.setPreferredSize(new java.awt.Dimension(400, 540));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Name_Logo.jpg"))); // NOI18N

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Upi.png"))); // NOI18N

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel16.setText("REQUEST MONEY");

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setText("FROM");

        txtSend.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtSend.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Moblie / UPI ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N
        txtSend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSendKeyTyped(evt);
            }
        });

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Rupee.png"))); // NOI18N

        txtAmt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtAmt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N
        txtAmt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmtKeyTyped(evt);
            }
        });

        txtRem.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtRem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Remark(Optional)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel29.setText("Select account for which you want to request");

        txtAcc.setOpaque(false);

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(72, 133, 237));
        jLabel30.setText("Account No.");

        reqMoneyBtn.setBackground(new java.awt.Color(72, 133, 237));
        reqMoneyBtn.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        reqMoneyBtn.setForeground(new java.awt.Color(255, 255, 255));
        reqMoneyBtn.setText("REQUEST");
        reqMoneyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqMoneyBtnActionPerformed(evt);
            }
        });

        cancelReqBtn.setBackground(new java.awt.Color(72, 133, 237));
        cancelReqBtn.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cancelReqBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelReqBtn.setText("Cancel");
        cancelReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReqBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel16))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel21))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(txtSend, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel22)
                        .addGap(4, 4, 4)
                        .addComponent(txtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(txtRem, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel29))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel30))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(txtAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(reqMoneyBtn)
                        .addGap(80, 80, 80)
                        .addComponent(cancelReqBtn))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel12)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel15)))
                .addGap(12, 12, 12)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(txtSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtRem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel29)
                .addGap(3, 3, 3)
                .addComponent(jLabel30)
                .addGap(6, 6, 6)
                .addComponent(txtAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reqMoneyBtn)
                    .addComponent(cancelReqBtn)))
        );

        javax.swing.GroupLayout RequestUILayout = new javax.swing.GroupLayout(RequestUI.getContentPane());
        RequestUI.getContentPane().setLayout(RequestUILayout);
        RequestUILayout.setHorizontalGroup(
            RequestUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        RequestUILayout.setVerticalGroup(
            RequestUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        SendUI.setTitle("Send Money - SWIFT UPI");
        SendUI.setIconImage(new ImageIcon(getClass().getResource("UPI_symbol.png")).getImage());
        SendUI.setMinimumSize(new java.awt.Dimension(400, 540));
        SendUI.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                SendUIWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                SendUIWindowDeactivated(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setMinimumSize(new java.awt.Dimension(400, 540));
        jPanel9.setPreferredSize(new java.awt.Dimension(400, 540));

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel35.setText("SEND MONEY");

        jLabel36.setBackground(new java.awt.Color(255, 255, 255));
        jLabel36.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel36.setText("TO");

        txtRec.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtRec.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtRec.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mobile / UPI ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N
        txtRec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRecKeyTyped(evt);
            }
        });

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Rupee.png"))); // NOI18N

        jTextField3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Remark(Optional)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N

        sdAmt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        sdAmt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(72, 133, 237))); // NOI18N
        sdAmt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sdAmtKeyTyped(evt);
            }
        });

        jLabel38.setBackground(new java.awt.Color(255, 255, 255));
        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setText("Select account for transaction");

        jLabel39.setBackground(new java.awt.Color(255, 255, 255));
        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Name_Logo.jpg"))); // NOI18N

        jLabel40.setBackground(new java.awt.Color(255, 255, 255));
        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Upi.png"))); // NOI18N

        sendAcc.setOpaque(false);

        jLabel41.setBackground(new java.awt.Color(255, 255, 255));
        jLabel41.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(72, 133, 237));
        jLabel41.setText("Account No.");

        payMoneyBtn.setBackground(new java.awt.Color(72, 133, 237));
        payMoneyBtn.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        payMoneyBtn.setForeground(new java.awt.Color(255, 255, 255));
        payMoneyBtn.setText("PAY");
        payMoneyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payMoneyBtnActionPerformed(evt);
            }
        });

        cancelPayBtn.setBackground(new java.awt.Color(72, 133, 237));
        cancelPayBtn.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cancelPayBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelPayBtn.setText("Cancel");
        cancelPayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPayBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel39)
                .addGap(6, 6, 6)
                .addComponent(jLabel40))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel36))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(txtRec, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel37)
                .addGap(4, 4, 4)
                .addComponent(sdAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel38))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel41))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(sendAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(payMoneyBtn)
                .addGap(178, 178, 178)
                .addComponent(cancelPayBtn))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40))
                .addGap(18, 18, 18)
                .addComponent(jLabel35)
                .addGap(18, 18, 18)
                .addComponent(jLabel36)
                .addGap(18, 18, 18)
                .addComponent(txtRec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel37))
                    .addComponent(sdAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel38)
                .addGap(6, 6, 6)
                .addComponent(jLabel41)
                .addGap(4, 4, 4)
                .addComponent(sendAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(payMoneyBtn)
                    .addComponent(cancelPayBtn)))
        );

        javax.swing.GroupLayout SendUILayout = new javax.swing.GroupLayout(SendUI.getContentPane());
        SendUI.getContentPane().setLayout(SendUILayout);
        SendUILayout.setHorizontalGroup(
            SendUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SendUILayout.setVerticalGroup(
            SendUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Swift UPI");
        setIconImage(new ImageIcon(getClass().getResource("UPI_symbol.png")).getImage());
        setMinimumSize(new java.awt.Dimension(584, 700));
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMinimumSize(new java.awt.Dimension(584, 679));
        jPanel4.setPreferredSize(new java.awt.Dimension(584, 679));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/NameB.png"))); // NOI18N

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Upi.png"))); // NOI18N

        txtUname.setBackground(new java.awt.Color(255, 255, 255));
        txtUname.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        txtUname.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Account.png"))); // NOI18N

        logoutBtn.setBackground(new java.awt.Color(255, 255, 255));
        logoutBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logoutBtn.setText("Logout");
        logoutBtn.setBorder(null);
        logoutBtn.setOpaque(false);
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel17.setText("TRANSFER MONEY");

        sendBtn.setBackground(new java.awt.Color(255, 255, 255));
        sendBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Send .jpg"))); // NOI18N
        sendBtn.setBorder(null);
        sendBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        requestBtn.setBackground(new java.awt.Color(255, 255, 255));
        requestBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Request.jpg"))); // NOI18N
        requestBtn.setBorder(null);
        requestBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        requestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBtnActionPerformed(evt);
            }
        });

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel18.setText("Send");

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel19.setText("Request");

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setText("MY INFORMATION");

        transBtn.setBackground(new java.awt.Color(255, 255, 255));
        transBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Link1.jpg"))); // NOI18N
        transBtn.setBorder(null);
        transBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        transBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transBtnActionPerformed(evt);
            }
        });

        profileBtn.setBackground(new java.awt.Color(255, 255, 255));
        profileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Link2.jpg"))); // NOI18N
        profileBtn.setBorder(null);
        profileBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        profileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtnActionPerformed(evt);
            }
        });

        bankAccBtn.setBackground(new java.awt.Color(255, 255, 255));
        bankAccBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swift/upi/Link3.jpg"))); // NOI18N
        bankAccBtn.setBorder(null);
        bankAccBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bankAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankAccBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(132, 132, 132))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(requestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bankAccBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel20)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(transBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(txtUname)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(logoutBtn)
                        .addGap(20, 20, 20))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logoutBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(requestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)))
                .addGap(22, 22, 22)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(transBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankAccBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void transBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transBtnActionPerformed
if(x==0){
String id=txtPupi.getText();
int limit=0,noLimit=0;
DefaultTableModel model=(DefaultTableModel)historyTab.getModel();
try{
    String query0="Select * from UserDetail where Upi_Id=?;";
    PreparedStatement pst0=DbConnect.getConnection().prepareStatement(query0);
    pst0.setString(1,id);
    ResultSet res=pst0.executeQuery();
    while(res.next()){
        limit=res.getInt("Transaction_Limit");
        noLimit=res.getInt("No_Of_Transaction");
    }
   if(limit==0){
       translimit.setText("Set");
      
   }
   if(limit!=0){
       translimit.setText("Change");
       txtLimit.setText(""+limit);
   }
   if(noLimit==0){
       noTransLimit.setText("Set");
       
   }
   if(noLimit!=0){
       noTransLimit.setText("Change");
      txtLimit2.setText(""+noLimit);
   }
    
    
    
    
    
    String query="Select * from History where Upi_Id=?;";
    PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setString(1,id);
    ResultSet rs=pst.executeQuery();
    
    
    while(rs.next()){
        int no=historyTab.getRowCount()+1;
        String from=rs.getString("Acc_From");
        String to=rs.getString("Acc_To");
        long acc=rs.getLong("Account");
        String D_T=rs.getString("Date_Time");
        String hist=rs.getString("Type");
        float amt=rs.getFloat("Amount");

        model.addRow(new Object[] {no,from,to,acc,D_T,hist,amt});
        
                }
        TransUI.setVisible(true);
        TransUI.setLocationRelativeTo(null);
  
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }   }
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}
 // TODO add your handling code here:
    }//GEN-LAST:event_transBtnActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
if(x==0){
sendAcc.addItem("--Select Account--");
sendAcc.setSelectedIndex(0);
String id=txtPupi.getText();
try{
    String query="Select * from BankDetail where Upi_id=?;";
    PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setString(1,id);
    ResultSet rs=pst.executeQuery();
    while(rs.next()){
        long acc=rs.getLong("Account_No");
        pin=rs.getInt("Pin");
       sendAcc.addItem(""+acc);
       
    }
}
    catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
SendUI.setLocationRelativeTo(this);
SendUI.setVisible(true);
}
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Conection.");
}// TODO add your handling code here:
    }//GEN-LAST:event_sendBtnActionPerformed

    private void requestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBtnActionPerformed
if(x==0){
txtAcc.addItem("--Select Account--");
txtAcc.setSelectedIndex(0); 
String id=txtPupi.getText();
try{
    String query="Select * from BankDetail where Upi_id=?;";
    PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setString(1,id);
    ResultSet rs=pst.executeQuery();
    while(rs.next()){
        long acc=rs.getLong("Account_No");
        txtAcc.addItem(""+acc); 
    }
}
    catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }

       
RequestUI.setLocationRelativeTo(this);
RequestUI.setVisible(true);   }
else{
JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}// TODO add your handling code here:
    }//GEN-LAST:event_requestBtnActionPerformed

    private void gth1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gth1BtnActionPerformed
DefaultTableModel model=(DefaultTableModel)historyTab.getModel();
model.setRowCount(0);
        this.TransUI.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_gth1BtnActionPerformed

    private void profileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtnActionPerformed
 ProfileUI.setVisible(true);
 ProfileUI.setLocationRelativeTo(null);// TODO add your handling code here:
    }//GEN-LAST:event_profileBtnActionPerformed

    private void bankAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankAccBtnActionPerformed
if(x==0){
String id=txtPupi.getText();
DefaultTableModel model1=(DefaultTableModel)bankAcc.getModel();
try{
    String query="Select * from BankDetail where Upi_Id=?;";
    PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setString(1,id);
    ResultSet rs=pst.executeQuery();
    
    while(rs.next()){
        int No=bankAcc.getRowCount()+1;
        String Bank=rs.getString("Bank");
        long Acc=rs.getLong("Account_No");
        String accType=rs.getString("Account_Type");
        float amt=rs.getFloat("Balance");
       
        model1.addRow(new Object[] {No,Bank,Acc,accType,amt});
        
                }
        BankAccUI.setVisible(true);
        BankAccUI.setLocationRelativeTo(null);
  
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }  }
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}
// TODO add your handling code here:
    }//GEN-LAST:event_bankAccBtnActionPerformed

    private void logout2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout2BtnActionPerformed
this.ProfileUI.dispose();
        dispose();
new LoginUI().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_logout2BtnActionPerformed

    private void gth2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gth2BtnActionPerformed
this.ProfileUI.dispose();
txtUpiPIN.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_gth2BtnActionPerformed

    private void gth3BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gth3BtnActionPerformed
DefaultTableModel model1 =(DefaultTableModel)bankAcc.getModel();
model1.setRowCount(0);
this.BankAccUI.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_gth3BtnActionPerformed

    private void deleteAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccBtnActionPerformed
String id=txtPupi.getText();
int n=JOptionPane.showConfirmDialog(null,"Are you sure to delete your account ?","Account delete",0,3);
if(n==JOptionPane.YES_OPTION)
{
try{
     String query1="Delete from UserDetail where Upi_Id=?;";
     PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
     pst1.setString(1,id);
     int n1=pst1.executeUpdate();
     
     String query2="Delete from BankDetail where Upi_Id=?;";
     PreparedStatement pst2=DbConnect.getConnection().prepareStatement(query2);
     pst2.setString(1,id);
     int n2=pst2.executeUpdate();
     
     if(n1>0 && n2>0){
         JOptionPane.showMessageDialog(null,"Account deleted successfully. \n Hope to see you again.");
         this.ProfileUI.dispose();
        dispose();
        new LoginUI().setVisible(true);
     }
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }}
// TODO add your handling code here:
    }//GEN-LAST:event_deleteAccBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
dispose();
new LoginUI().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void TransUIWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_TransUIWindowClosing
DefaultTableModel model =(DefaultTableModel)historyTab.getModel();
model.setRowCount(0);
this.TransUI.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_TransUIWindowClosing

    private void BankAccUIWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_BankAccUIWindowClosing
 DefaultTableModel model1 =(DefaultTableModel)bankAcc.getModel();
model1.setRowCount(0);
this.BankAccUI.dispose();       // TODO add your handling code here:
    }//GEN-LAST:event_BankAccUIWindowClosing

    private void remBankAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remBankAccBtnActionPerformed

        long acc=Long.parseLong(remAcc.getText());
String pass=new String(remPass.getPassword());
String id=txtPupi.getText();
DefaultTableModel model1=(DefaultTableModel)bankAcc.getModel();

if(remAcc.getText().equals("")){
JOptionPane.showMessageDialog(null,"Please enter account number.");
      }
if(pass.equals(""))
{
JOptionPane.showMessageDialog(null,"Please enter your account password.");
              }
if(pass.equals("") && remAcc.getText().equals(""))
{
    JOptionPane.showMessageDialog(null,"All Feilds are required.");
     }

if(x==0){
int count=model1.getRowCount();
if(count!=1){ 
try{
    String query0="Select * from Userdetail where Upi_Id=? && password=?;";
    PreparedStatement pst0=DbConnect.getConnection().prepareStatement(query0);
    pst0.setString(1,id);
    pst0.setString(2,pass);
     
    ResultSet rs=pst0.executeQuery();
    if(rs.next()){
        try{
            String query="Delete from BankDetail where Upi_Id=? && Account_No=?;";
             PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
             pst.setString(1,id);
             pst.setLong(2,acc);
            int conf=JOptionPane.showConfirmDialog(null,"Are you sure to remove the bank account.","Remove Bank",0,-1);
            if(conf==JOptionPane.YES_OPTION){
             int n=pst.executeUpdate();
             if(n>0){
                 JOptionPane.showMessageDialog(null,"Bank account deleted successfully.","Account Deleted",1);
                 jTextField6.setText("");
                 remAcc.setText("");
                 remPass.setText("");
             }
             else{
                 JOptionPane.showMessageDialog(null,"Failed to delete bank account.","Error!",0);
             }}
        }
        catch(SQLException | HeadlessException ex)
{
JOptionPane.showMessageDialog(null,ex);
}
    }
    else{
        JOptionPane.showMessageDialog(null,"Password didn't matched!","Access denied!",0);
        remPass.setText("");
    }
    
}
catch(SQLException | HeadlessException ex)
{
JOptionPane.showMessageDialog(null,ex);
}

}
else{
    JOptionPane.showMessageDialog(null,"All bank account can not be deleted. \n One bank account is compulsary for existance of account. \n If you want to remove all bank accounts you should delete your account.");
}

model1.setRowCount(0);
try{
    String query2="Select * from BankDetail where Upi_Id=?;";
    PreparedStatement pst2=DbConnect.getConnection().prepareStatement(query2);
    pst2.setString(1,id);
    ResultSet rs2=pst2.executeQuery();
    
    while(rs2.next()){
        int NO=bankAcc.getRowCount()+1;
        String Bank=rs2.getString("Bank");
        long Acc=rs2.getLong("Account_No");
        String AccType=rs2.getString("Account_Type");
        float amt=rs2.getFloat("Balance");

        model1.addRow(new Object[] {NO,Bank,Acc,AccType,amt});
        
                }
  
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
}
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}
    }//GEN-LAST:event_remBankAccBtnActionPerformed

    private void addBankAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBankAccBtnActionPerformed
String id=txtPupi.getText();
String bank =(String)addBank.getSelectedItem();
long acc=Long.parseLong(addAccount.getText());
long mobile=Long.parseLong(addMobile.getText());
String pin=new String(addPIN.getPassword());
String rePin=new String(addRePIN.getPassword());
String accType="Saving";
float bal=(float) Math.random() * 1000000;


if(addBank.getSelectedIndex()==0 || addAccount.getText().equals("") || addMobile.getText().equals("") || pin.equals("") || rePin.equals("")){
    JOptionPane.showMessageDialog(null,"All feilds are required","Error",0);
}
else{ 
    if(x==0){
try{
    String query="Select * from BankDetail where Account_No=?;";
    PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setLong(1,acc);
    ResultSet rs=pst.executeQuery();
if(rs.next()){
        JOptionPane.showMessageDialog(null,"This bank account already exists.\n Please try another one.");
    }
else{
        
  try{
    String query1="Insert Into BankDetail(Upi_ID,Bank,Account_No,Account_Type,Balance,Mobile,Pin,rePin) values(?,?,?,?,?,?,?,?);";
    PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
    pst1.setString(1,id);
    pst1.setString(2,bank);
    pst1.setLong(3,acc);
    pst1.setString(4,accType);
    pst1.setFloat(5,bal);
    pst1.setLong(6,mobile);
    pst1.setString(7,pin);
    pst1.setString(8,rePin);
    
    int n=pst1.executeUpdate();
    
    if(n>0)
      {
        JOptionPane.showMessageDialog(null,"Bank account added Successfully","Successful!",1);
        addBank.setSelectedIndex(0);
        addAccount.setText("");
        addMobile.setText("");
        addPIN.setText("");
        addRePIN.setText("");
      }
    else
      {
        JOptionPane.showMessageDialog(null,"Failed to add bank account. Please try again!","Error",0);
      }
}
catch(SQLException | HeadlessException ex)
{
JOptionPane.showMessageDialog(null,ex);
}}}
catch(SQLException | HeadlessException ex)
{
JOptionPane.showMessageDialog(null,ex);
}

DefaultTableModel model1=(DefaultTableModel)bankAcc.getModel();
model1.setRowCount(0);
try{
    String query2="Select * from BankDetail where Upi_Id=?;";
    PreparedStatement pst2=DbConnect.getConnection().prepareStatement(query2);
    pst2.setString(1,id);
    ResultSet rs2=pst2.executeQuery();
    
    while(rs2.next()){
        int NO=bankAcc.getRowCount()+1;
        String Bank=rs2.getString("Bank");
        long Acc=rs2.getLong("Account_No");
        String AccType=rs2.getString("Account_Type");
        float amt=rs2.getFloat("Balance");

        model1.addRow(new Object[] {NO,Bank,Acc,AccType,amt});
        
                }
  
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
}
else{
        JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
        }
}

    }//GEN-LAST:event_addBankAccBtnActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed


        if(show.isSelected()){
            show.setText("Hide");
            addPIN.setEchoChar((char)0);
            addRePIN.setEchoChar((char)0);
        }
        else{
            show.setText("Show");
            addPIN.setEchoChar('\u25cf');
            addRePIN.setEchoChar('\u25cf');

        }   
            // TODO add your handling code here:
    }//GEN-LAST:event_showActionPerformed

    private void addRePINKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addRePINKeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
        String pin=new String(addPIN.getPassword());
        String rePin=new String(addRePIN.getPassword());
        if(pin.equals(rePin)){
            check.setText("Matched");
            check.setForeground(Color.GREEN);
        }
        else  if(!pin.equals(rePin))
        {
            check.setText("Not Matched");
            check.setForeground(Color.RED);
        }
        else if(rePin.length()<=0){
            check.setText("");}        // TODO add your handling code here:
    }//GEN-LAST:event_addRePINKeyTyped

    private void virtualIdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_virtualIdBtnActionPerformed
if(x==0){
 String id=txtPupi.getText();
        try{
    String query="Select Virtual_ID from Userdetail where Upi_Id=? and Virtual_Id IS NULL;";
     PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setString(1,id);
    ResultSet rs=pst.executeQuery();
    
    if(rs.next()){
     
        int conf=JOptionPane.showConfirmDialog(null,"Virtual ID is a temporary id used for transaction purpose only. \n You  will not be able to login using your Virtual ID \n \n \n Do you want to create your Virtual ID ?","Virtual ID",0,3);
if(conf==JOptionPane.YES_OPTION)
{
    String virtual=JOptionPane.showInputDialog("Create your Virtual ID");
    
    try{
        String query1="Select * from UserDetail where Virtual_ID=?;";
        PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
        pst1.setString(1,virtual);
        ResultSet res=pst1.executeQuery();
        if(res.next()){
            JOptionPane.showMessageDialog(null,"This Virtual Id is already existing and associated with another account. \n Please choose another one.");
        }
        else
        {   
try{
    String query2="Update UserDetail set Virtual_ID=? where Upi_Id=?;";
    PreparedStatement pst2=DbConnect.getConnection().prepareStatement(query2);
    pst2.setString(1,virtual);
    pst2.setString(2,id);
    int n=pst2.executeUpdate();
    
    if(n>0){
        JOptionPane.showMessageDialog(null,"Virtual Id created successfully");
        txtVirtID.setText(virtual);
    }
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
        }
     }
     catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
               }
   
       }
 else
    {
        JOptionPane.showMessageDialog(null,"You have already created your Virtual ID.");
    }
        }
        
  catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }  }
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}
// TODO add your handling code here:
    }//GEN-LAST:event_virtualIdBtnActionPerformed

    private void txtVirtIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtVirtIDMouseClicked
txtVirtID.setEnabled(true);
txtVirtID.setEditable(true);
changeVIdBtn.setEnabled(true);// TODO add your handling code here:
    }//GEN-LAST:event_txtVirtIDMouseClicked

    private void changeVIdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeVIdBtnActionPerformed
if(x==0){
String vir=txtVirtID.getText();
String id=txtPupi.getText();
int n=JOptionPane.showConfirmDialog(null,"Are you sure you want to change your Virtual ID?","Virtual ID",0,3);
if(n==JOptionPane.YES_OPTION)
{
try{
    String query="Select * from Userdetail where Virtual_Id=? && Upi_ID!=?;";
    PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setString(1,vir);
    pst.setString(2,id);
    ResultSet res=pst.executeQuery();
    if(res.next())
    {
        JOptionPane.showMessageDialog(null,"This Virtual ID is already existing. \n Please choose another one.");
    }
    else{
try{
    String query1="Update UserDetail set Virtual_Id=? where Upi_ID=?;";
    PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
    pst1.setString(1,vir);
    pst1.setString(2,id);
    int rs=pst1.executeUpdate();
    
    if(rs>0){
        JOptionPane.showMessageDialog(null,"Virtual ID changed successfully.");
        txtVirtID.setText(vir);
        txtVirtID.setEditable(false);
    }
    else {
        JOptionPane.showMessageDialog(null,"Unable to change Virtual Id. \n Please try again!");
    }
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            } 
    }
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
}
}
else{
JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}// TODO add your handling code here:
    }//GEN-LAST:event_changeVIdBtnActionPerformed

    private void changePINBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePINBtnActionPerformed
if(x==0){ 
String id=txtPupi.getText();
String newPin=(JOptionPane.showInputDialog("Please enter your new 4-digit upi pin."));
String newRePin=(JOptionPane.showInputDialog("Please re-enter your new 4-digit upi pin"));
if(newPin.equals(newRePin)){
try{
    String query="Update BankDetail set Pin=? , rePin=? where Upi_id=? && Account_No=?;";
    PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
    pst.setString(1,newPin);
    pst.setString(2,newRePin);
   pst.setString(3,id);
   pst.setLong(4,ac);
    
   int n= pst.executeUpdate();
    
    if(n>0){
        JOptionPane.showMessageDialog(null,"UPI PIN changed successfully","Successful!",1);
        txtUpiPIN.setText("");
    }
    else{
        JOptionPane.showMessageDialog(null,"Unable to change PIN. Please try agin!","Error",0);
    }
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
}
else
{
JOptionPane.showMessageDialog(null,"PIN dosen't match. \n Please try again!","Error",0);
              }  }
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}
// TODO add your handling code here:
    }//GEN-LAST:event_changePINBtnActionPerformed

    private void changeVIdBtnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_changeVIdBtnFocusLost
txtVirtID.setEditable(false);
txtVirtID.setEnabled(false);
changeVIdBtn.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_changeVIdBtnFocusLost

    private void txtUpiPINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUpiPINMouseClicked
acc = (JOptionPane.showInputDialog(null,"Enter the last 4-digit of your Account No:","Account No",-1));
String id=txtPupi.getText();// TODO add your handling code here:
try{
    String query="Select * from BankDetail where Upi_ID=? && Account_No like ?;";
      PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
      pst.setString(1,id);
      pst.setString(2,"%"+acc);
      ResultSet rs=pst.executeQuery();
      if(rs.next())
      {
          int pin=rs.getInt("Pin");
          ac=rs.getLong("Account_No");
          txtUpiPIN.setText(""+pin);
          changePINBtn.setEnabled(true);
      }
      else{
          JOptionPane.showMessageDialog(null,"Sorry ,this bank account does not exist.");
          changePINBtn.setEnabled(false);
      }
      
}
 catch(SQLException | HeadlessException ex)
{
    JOptionPane.showMessageDialog(null,ex);
            }
    }//GEN-LAST:event_txtUpiPINMouseClicked

    private void ProfileUIWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ProfileUIWindowClosing
txtUpiPIN.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_ProfileUIWindowClosing

    private void translimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_translimitActionPerformed
if(x==0){
String nm1=translimit.getText();
String id=txtPupi.getText();
int n;
if(nm1.equals("Set"))
 {
     n=Integer.parseInt(JOptionPane.showInputDialog("Enter the Transaction Amount limit:"));
     try{
         String query="Update UserDetail set Transaction_Limit=? where Upi_Id=?;";
         PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
         pst.setInt(1,n);
         pst.setString(2,id);
         
         int rs=pst.executeUpdate();
         
         if(n>0){
             JOptionPane.showMessageDialog(null,"Transaction Amount limit set successfully.","Successful!",1);
             txtLimit.setText(""+n);
             translimit.setText("Change");
            int n1=Integer.parseInt(txtLimit.getText());
            if(n1==0){
                translimit.setText("Set");
            }
         }
         else{
             JOptionPane.showMessageDialog(null,"Failed to set Transaction Amount limit!","Failed!",0);
         }
     }
     catch(SQLException | HeadlessException ex)
   {
    JOptionPane.showMessageDialog(null,ex);
            }
        }
else if(nm1.equals("Change")){
     n=Integer.parseInt(JOptionPane.showInputDialog("Enter your new Transaction Amount limit:"));
    try{
        String query1="Update UserDetail set Transaction_Limit=? where Upi_id=?;";
        PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
        pst1.setInt(1,n);
        pst1.setString(2,id);
        int res=pst1.executeUpdate();
        
        if(res>0){
            JOptionPane.showMessageDialog(null,"Transaction Amount limit changed successfully.","Successful!",1);
            txtLimit.setText(""+n);
            int n1=Integer.parseInt(txtLimit.getText());
            if(n1==0){
                translimit.setText("Set");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Failed to change the Transaction Amount limit!","Failed!",0);
        }
    }
      catch(SQLException | HeadlessException ex)
   {
    JOptionPane.showMessageDialog(null,ex);
            }
}  }
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}
    }//GEN-LAST:event_translimitActionPerformed

    private void noTransLimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noTransLimitActionPerformed
if(x==0){
        String nm2=noTransLimit.getText();
String id=txtPupi.getText();
int n;
if(nm2.equals("Set"))
 {
     n=Integer.parseInt(JOptionPane.showInputDialog("Enter the No of Transaction limit:"));
     try{
         String query="Update UserDetail set No_Of_Transaction=? where Upi_Id=?;";
         PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
         pst.setInt(1,n);
         pst.setString(2,id);
         
         int rs=pst.executeUpdate();
         
         if(n>0){
             JOptionPane.showMessageDialog(null,"Transaction limit set successfully.","Successful!",1);
             txtLimit2.setText(""+n);
             noTransLimit.setText("Change");
            int n2=Integer.parseInt(txtLimit2.getText());
            if(n2==0){
                noTransLimit.setText("Set");
            }
         }
         else{
             JOptionPane.showMessageDialog(null,"Failed to set Transaction limit!","Failed!",0);
         }
     }
     catch(SQLException | HeadlessException ex)
   {
    JOptionPane.showMessageDialog(null,ex);
            }
        }
else if(nm2.equals("Change")){
     n=Integer.parseInt(JOptionPane.showInputDialog("Enter your new No of Transaction  limit:"));
    try{
        String query1="Update UserDetail set No_Of_Transaction=? where Upi_id=?;";
        PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
        pst1.setInt(1,n);
        pst1.setString(2,id);
        int res=pst1.executeUpdate();
        
        if(res>0){
            JOptionPane.showMessageDialog(null,"Transaction limit changed successfully.","Successful!",1);
            txtLimit2.setText(""+n);
            int n2=Integer.parseInt(txtLimit2.getText());
            if(n2==0){
                noTransLimit.setText("Set");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Failed to change the Transaction limit!","Failed!",0);
        }
    }
      catch(SQLException | HeadlessException ex)
   {
    JOptionPane.showMessageDialog(null,ex);
            }
}   }
else
{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}// TODO add your handling code here:
    }//GEN-LAST:event_noTransLimitActionPerformed

    private void show2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show2ActionPerformed
   if(show2.isSelected()){
            show2.setText("Hide");
            remPass.setEchoChar((char)0);
        }
        else{
            show2.setText("Show");
            remPass.setEchoChar('\u25cf');

        }      // TODO add your handling code here:
    }//GEN-LAST:event_show2ActionPerformed

    private void reqMoneyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqMoneyBtnActionPerformed
int rs = 0,n = 0;

String upi=txtPupi.getText();      
String nm=txtPname.getText();        
String id=txtSend.getText();
float amt=Float.parseFloat(txtAmt.getText());
String accNo=(String) txtAcc.getSelectedItem();
String type="Credit";

DateFormat dateTime = new SimpleDateFormat("YYYY-MM-DD hh:mm:ss aa");
String DT = dateTime.format(new java.util.Date()).toString();

java.util.Date dt=Calendar.getInstance().getTime();
DateFormat Dt = new SimpleDateFormat("YYYY-MM-DD");
String date=Dt.format(dt);

Calendar cal = Calendar.getInstance();
SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
String time=sdf.format(cal.getTime());

if(id.equals("")|| txtSend.getText().equals("") || txtAcc.getSelectedIndex()==0)
 {
            JOptionPane.showMessageDialog(null,"All feild are required.","Required!",0);
        }

  else
    { if(x==0){
        try{
            String query="Update BankDetail set Balance=Balance+"+amt+" where Upi_id=? && Account_No=?;";
            PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
            pst.setString(1,upi);
            pst.setString(2,accNo);
             
            n=pst.executeUpdate();
            
                if(n>0){

                String query1="Insert into History(Upi_ID,Acc_from,Acc_To,Account,Date_Time,Type,Amount,Date,Time) values(?,?,?,?,?,?,?,?,?);";
                PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
                pst1.setString(1,upi);
                pst1.setString(2,id);
                pst1.setString(3,upi);
                pst1.setString(4,accNo);
                pst1.setString(5,DT);
                pst1.setString(6,type);
                pst1.setFloat(7,amt);
                pst1.setString(8,date);
                pst1.setString(9,time);

                rs=pst1.executeUpdate();}
                

                if(n>0&&rs>0){
                    JOptionPane.showMessageDialog(null,"Request Successful!");
                    this.RequestUI.dispose();    
                    txtSend.setText("");
                    txtAmt.setText("");
                    txtRem.setText("");
                    txtAcc.removeAllItems();
                }
                else{
                    JOptionPane.showMessageDialog(null,"Unable to make your request.Please try again.");
                }

            }
            catch(SQLException | HeadlessException ex)
            {
                JOptionPane.showMessageDialog(null,ex);
            }
        }
    else {
        JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
    }
    }
if(n>0 && rs>0){
JOptionPane.showMessageDialog(null,"Hey "+nm+" your request have been accpted and you have received a balance of "+amt+"\n \n From: \n UPI ID:- "+id+"\n Amount:- "+amt+"\n Remark:- "+"'Feel free to ask for maoney because money is everything'","INformation",1);
}
    }//GEN-LAST:event_reqMoneyBtnActionPerformed

    private void cancelPayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPayBtnActionPerformed
this.SendUI.dispose();
txtRec.setText("");
sdAmt.setText("");
jTextField3.setText("");
sendAcc.removeAllItems();// TODO add your handling code here:
    }//GEN-LAST:event_cancelPayBtnActionPerformed

    private void cancelReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReqBtnActionPerformed
this.RequestUI.dispose();    
txtSend.setText("");
txtAmt.setText("");
txtRem.setText("");
txtAcc.removeAllItems();// TODO add your handling code here:
    }//GEN-LAST:event_cancelReqBtnActionPerformed

    private void payMoneyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payMoneyBtnActionPerformed
int noLimit = 0,n = 0,r = 0,lim = 0;
String upi=txtPupi.getText();
String id=txtRec.getText();
float amt=Float.parseFloat(sdAmt.getText());
String bank=(String)sendAcc.getSelectedItem();
String type="Debit";

if(x==0){
try{
    String query="Select * from UserDetail where Upi_Id=?;";
        PreparedStatement pst=DbConnect.getConnection().prepareStatement(query);
        pst.setString(1,upi);
        ResultSet rs=pst.executeQuery();
        if(rs.next()){
          noLimit=rs.getInt("No_Of_Transaction");
          lim=rs.getInt("Transaction_Limit");
        }
        
      String sql="Select * from BankDetail where Upi_ID=? && Account_No=?;";
       PreparedStatement stmt=DbConnect.getConnection().prepareStatement(sql);
       stmt.setString(1,upi);
       stmt.setString(2,bank);
       ResultSet rt=stmt.executeQuery();
       
       if(rt.next()){
           rup=rt.getFloat("Balance");
       }
}
 catch(SQLException | HeadlessException ex)
            {
                JOptionPane.showMessageDialog(null,ex);
            }       
        

DateFormat dateTime = new SimpleDateFormat("YYYY-MM-DD hh:mm:ss aa");
String DT = dateTime.format(new java.util.Date()).toString();

java.util.Date dt=Calendar.getInstance().getTime();
DateFormat Dt = new SimpleDateFormat("YYYY-MM-DD");
String date=Dt.format(dt);

Calendar cal = Calendar.getInstance();
SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
String time=sdf.format(cal.getTime());

if(id.equals("") || sdAmt.getText().equals("") || sendAcc.getSelectedIndex()==0)
{
    JOptionPane.showMessageDialog(null,"All feilds are required.");
}
else{

if(amt>rup){
    JOptionPane.showMessageDialog(null,"Insufficient Balance","Alert",0);
}    
else{
    
if(amt>lim && lim>0)
{
    JOptionPane.showMessageDialog(null,"Sorry, Transaction Limit exceeded. Please make the transaction under your transaction limit.\n If you wish you can change or remove the transaction limit in the Transaction Tab.","",1);
      }
else{
    try{
      String query1="Select count(*) from History where Upi_Id=? && Date=? && Time between '00:00:01' and '23:59:59';";
       PreparedStatement pst1=DbConnect.getConnection().prepareStatement(query1);
       pst1.setString(1,upi);
       pst1.setString(2,date);
       ResultSet res=pst1.executeQuery();
       while(res.next())
       {
           n=res.getInt("count(*)");
       }
    if(n>noLimit && noLimit>0)
    {
        JOptionPane.showMessageDialog(null,"Sorry, you have completed your No Of Transaction Limit","",1);
    }
 else{
         try{
                String query2="Update BankDetail set Balance=Balance-"+amt+" where Upi_id=? && Account_No=?;";
                PreparedStatement pst2=DbConnect.getConnection().prepareStatement(query2);
                pst2.setString(1,upi);
                pst2.setString(2,bank);
                
                int cPin=Integer.parseInt(JOptionPane.showInputDialog("Enter your UPI PIN of selected bank:"));
                if(cPin==pin){
                int out=pst2.executeUpdate();
                if(out>0){
                     String query0="Insert into History(Upi_ID,Acc_from,Acc_To,Account,Date_Time,Type,Amount,Date,Time) values(?,?,?,?,?,?,?,?,?);";
                PreparedStatement pst0=DbConnect.getConnection().prepareStatement(query0);
                pst0.setString(1,upi);
                pst0.setString(2,upi);
                pst0.setString(3,id);
                pst0.setString(4,bank);
                pst0.setString(5,DT);
                pst0.setString(6,type);
                pst0.setFloat(7,amt);
                pst0.setString(8,date);
                pst0.setString(9,time);

                  r=pst0.executeUpdate();
                }
                if(out>0 && r>0){
                    JOptionPane.showMessageDialog(null,"Payment made successfully.","",1);
                    this.SendUI.dispose();
                    txtRec.setText("");
                    sdAmt.setText("");
                    jTextField3.setText("");
                    sendAcc.removeAllItems();
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Transaction Failed!","Failed!",0);
                               }
                                                       }
                else
                {
                    JOptionPane.showMessageDialog(null,"Incorrect UPI PIN. Please try again.","Error 201",0);
                }
         }
             catch(SQLException | HeadlessException ex)
            {
                JOptionPane.showMessageDialog(null,ex);
                     }
        }
    }
    catch(SQLException | HeadlessException ex)
            {
                JOptionPane.showMessageDialog(null,ex);
            }
}
}
}
}
else{
    JOptionPane.showMessageDialog(null,"Oops! No Internet Connection.");
}
    }//GEN-LAST:event_payMoneyBtnActionPerformed

    private void addRePINFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addRePINFocusLost
check.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_addRePINFocusLost

    private void addMobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addMobileKeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
if(addMobile.getText().length()>=10)
{evt.consume();
      }       // TODO add your handling code here:
    }//GEN-LAST:event_addMobileKeyTyped

    private void addAccountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addAccountKeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
  if(addAccount.getText().length()>=16)
{evt.consume();
      }         // TODO add your handling code here:
    }//GEN-LAST:event_addAccountKeyTyped

    private void addPINKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addPINKeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
 String pass=new String(addPIN.getPassword());
if(pass.length()>=4)
{evt.consume();
     }         // TODO add your handling code here:
    }//GEN-LAST:event_addPINKeyTyped

    private void txtVirtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVirtIDKeyTyped
if(txtVirtID.getText().length()>=20)
{evt.consume();
    }         // TODO add your handling code here:
    }//GEN-LAST:event_txtVirtIDKeyTyped

    private void txtLimitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLimitKeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
        if(txtLimit.getText().length()>=10)
{evt.consume();
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txtLimitKeyTyped

    private void txtLimit2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLimit2KeyTyped
  char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
   if(txtLimit2.getText().length()>=10)
{evt.consume();
   }       // TODO add your handling code here:
    }//GEN-LAST:event_txtLimit2KeyTyped

    private void txtSendKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSendKeyTyped
    if(txtSend.getText().length()>=20)
{evt.consume();
   }        // TODO add your handling code here:
    }//GEN-LAST:event_txtSendKeyTyped

    private void txtAmtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmtKeyTyped
  char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
  if(txtAmt.getText().length()>=10)
{evt.consume();
  }          // TODO add your handling code here:
    }//GEN-LAST:event_txtAmtKeyTyped

    private void txtRecKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecKeyTyped
  if(txtRec.getText().length()>=10)
{evt.consume();
      }          // TODO add your handling code here:
    }//GEN-LAST:event_txtRecKeyTyped

    private void sdAmtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sdAmtKeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
        if(sdAmt.getText().length()>=10)
{evt.consume();
    }          // TODO add your handling code here:
    }//GEN-LAST:event_sdAmtKeyTyped

    private void RequestUIWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_RequestUIWindowClosing
 txtSend.setText("");
txtAmt.setText("");
txtRem.setText("");
txtAcc.removeAllItems();       // TODO add your handling code here:
    }//GEN-LAST:event_RequestUIWindowClosing

    private void SendUIWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_SendUIWindowClosing
txtRec.setText("");
sdAmt.setText("");
jTextField3.setText("");
sendAcc.removeAllItems();        // TODO add your handling code here:
    }//GEN-LAST:event_SendUIWindowClosing

    private void remAccKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remAccKeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}
        if(remAcc.getText().length()>=16)
{evt.consume();
    }       // TODO add your handling code here:
    }//GEN-LAST:event_remAccKeyTyped

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
char enter=evt.getKeyChar();
if(!(Character.isDigit(enter)))
{evt.consume();}        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6KeyTyped

    private void RequestUIWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_RequestUIWindowDeactivated
txtSend.setText("");
txtAmt.setText("");
txtRem.setText("");
txtAcc.removeAllItems();         // TODO add your handling code here:
    }//GEN-LAST:event_RequestUIWindowDeactivated

    private void SendUIWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_SendUIWindowDeactivated
txtRec.setText("");
sdAmt.setText("");
jTextField3.setText("");
sendAcc.removeAllItems();       // TODO add your handling code here:
    }//GEN-LAST:event_SendUIWindowDeactivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeScreenUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame BankAccUI;
    public javax.swing.JFrame ProfileUI;
    private javax.swing.JDialog RequestUI;
    private javax.swing.JDialog SendUI;
    private javax.swing.JFrame TransUI;
    private javax.swing.JTextField addAccount;
    private javax.swing.JComboBox<String> addBank;
    private javax.swing.JButton addBankAccBtn;
    private javax.swing.JTextField addMobile;
    private javax.swing.JPasswordField addPIN;
    private javax.swing.JPasswordField addRePIN;
    private javax.swing.JTable bankAcc;
    private javax.swing.JButton bankAccBtn;
    private javax.swing.JButton cancelPayBtn;
    private javax.swing.JButton cancelReqBtn;
    private javax.swing.JButton changePINBtn;
    private javax.swing.JButton changeVIdBtn;
    private javax.swing.JLabel check;
    private javax.swing.JButton deleteAccBtn;
    private javax.swing.JButton gth1Btn;
    private javax.swing.JButton gth2Btn;
    private javax.swing.JButton gth3Btn;
    private javax.swing.JTable historyTab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton logout2Btn;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton noTransLimit;
    private javax.swing.JButton payMoneyBtn;
    private javax.swing.JButton profileBtn;
    private javax.swing.JTextField remAcc;
    private javax.swing.JButton remBankAccBtn;
    private javax.swing.JPasswordField remPass;
    private javax.swing.JButton reqMoneyBtn;
    private javax.swing.JButton requestBtn;
    private javax.swing.JTextField sdAmt;
    public javax.swing.JComboBox<String> sendAcc;
    private javax.swing.JButton sendBtn;
    private javax.swing.JCheckBox show;
    private javax.swing.JCheckBox show2;
    private javax.swing.JButton transBtn;
    private javax.swing.JButton translimit;
    public javax.swing.JComboBox<String> txtAcc;
    private javax.swing.JTextField txtAmt;
    public javax.swing.JTextField txtLimit;
    public javax.swing.JTextField txtLimit2;
    public javax.swing.JLabel txtPmobile;
    public javax.swing.JLabel txtPname;
    public javax.swing.JLabel txtPupi;
    private javax.swing.JTextField txtRec;
    private javax.swing.JTextField txtRem;
    private javax.swing.JTextField txtSend;
    public javax.swing.JLabel txtUname;
    public javax.swing.JTextField txtUpiPIN;
    public javax.swing.JTextField txtVirtID;
    private javax.swing.JButton virtualIdBtn;
    // End of variables declaration//GEN-END:variables
}
